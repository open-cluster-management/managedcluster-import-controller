#!/bin/sh -e
# set -x
# This is documented here:
# https://docs.openshift.com/container-platform/3.11/creating_images/guidelines.html#openshift-specific-guidelines

if ! whoami &>/dev/null; then
  if [ -w /etc/passwd ]; then
    echo "${USER_NAME:-rcm-controller}:x:$(id -u):$(id -g):${USER_NAME:-rcm-controller} user:${HOME}:/sbin/nologin" >> /etc/passwd
  fi
fi

export AWS_ACCESS_KEY_ID=`kubectl get secret aws-s3-coverage -n open-cluster-management -o=jsonpath='{.data.aws_access_key_id}' | base64 -d`
export AWS_SECRET_ACCESS_KEY=`kubectl get secret aws-s3-coverage -n open-cluster-management -o=jsonpath='{.data.aws_secret_access_key}' | base64 -d`
export AWS_BUCKET_NAME=`kubectl get secret aws-s3-coverage -n open-cluster-management -o=jsonpath='{.data.aws_bucket_name}' | base64 -d`
export AWS_BUCKET_FOLDER=`kubectl get secret aws-s3-coverage -n open-cluster-management -o=jsonpath='{.data.aws_bucket_folder}' | base64 -d`

echo "AWS_BUCKET_NAME="$AWS_BUCKET_NAME
echo "AWS_BUCKET_FOLDER="$AWS_BUCKET_FOLDER

FILENAME=$HOSTNAME-`date +%s%N`
FILEPATH=/tmp/coverage/$FILENAME
mkdir -p /tmp/coverage

${OPERATOR} -test.run "^TestRunMain$" -test.coverprofile=$FILEPATH.out $@ & PID=$!

trap_with_arg() {
    func="$1" ; shift
    for sig ; do
        trap "$func $sig" "$sig"
    done
}

func_trap() {
    echo "Trapped: $1"
    echo "Save coverage data..."
    kill -$1 $PID
    wait_data $FILEPATH.out
    if [ -n "$AWS_BUCKET_NAME" ]; then
       DESTPATH=s3://$AWS_BUCKET_NAME
       if [ -n "$AWS_BUCKET_FOLDER" ]; then
          DESTPATH=$DESTPATH/$AWS_BUCKET_FOLDER
       fi
       aws s3 cp $FILEPATH.out $DESTPATH/$FILENAME.out
    fi
}

wait_data() {
   n="10"
    while [ $n != 0 ]; do
        if [ -f $1 ]; then
            break
        fi
        echo "Coverage data not posted yet..."
        sleep 5
        n=$[$n-1]
    done

}

trap_with_arg func_trap 15

wait $PID